import /init.recovery.rc
import /init.recovery.microtrust.rc

on init
    mkdir /config
    mount configfs none /config
    mkdir /config/usb_gadget/g1 0770 shell shell
    write /config/usb_gadget/g1/idVendor 0x18d1
    write /config/usb_gadget/g1/idProduct 0xd001
    mkdir /config/usb_gadget/g1/strings/0x409 0770
    write /config/usb_gadget/g1/strings/0x409/serialnumber ${ro.serialno}
    write /config/usb_gadget/g1/strings/0x409/manufacturer ${ro.product.manufacturer}
    write /config/usb_gadget/g1/strings/0x409/product ${ro.product.model}
    mkdir /config/usb_gadget/g1/configs/b.1 0777 shell shell
    mkdir /config/usb_gadget/g1/configs/b.1/strings/0x409 0770 shell shell
    mkdir /config/usb_gadget/g1/functions/ffs.adb
    mkdir /config/usb_gadget/g1/functions/mtp.gs0
    mkdir /config/usb_gadget/g1/functions/fastboot
    mkdir /config/usb_gadget/g1/functions/sideload
    setprop sys.usb.ffs.aio_compat 1

    exec u:r:recovery:s0 -- /sbin/mntl_link
    write /sys/devices/platform/mt6357_gauge/kpdpwr_reset 0

on post-fs-data
# Support A/B feature for boot region
    symlink /dev/block/mmcblk0boot0 /dev/block/platform/bootdevice/by-name/preloader_a
    symlink /dev/block/mmcblk0boot1 /dev/block/platform/bootdevice/by-name/preloader_b

on property:ro.debuggable=0
    # distinguish USB shoulde connect or not, i.e. CDP vs SDP
    write /sys/class/udc/musb-hdrc/device/cmode 2
    # set charging free due to it wait for USB activation
    start adbd

on property:sys.usb.ffs.ready=1
    write /config/usb_gadget/g1/UDC "none"
    rm /config/usb_gadget/g1/configs/b.1/f1
    rm /config/usb_gadget/g1/configs/b.1/f2
    rm /config/usb_gadget/g1/configs/b.1/f3
    write /config/usb_gadget/g1/idVendor 0x18d1
    write /config/usb_gadget/g1/idProduct 0xd001
    
    # Handle mtp, adb, fastboot, sideload, or combinations
    if [ "${sys.usb.config}" == "mtp" ]; then
        write /config/usb_gadget/g1/configs/b.1/strings/0x409/configuration "mtp"
        symlink /config/usb_gadget/g1/functions/mtp.gs0 /config/usb_gadget/g1/configs/b.1/f1
    elif [ "${sys.usb.config}" == "mtp,adb" ]; then
        write /config/usb_gadget/g1/configs/b.1/strings/0x409/configuration "mtp_adb"
        symlink /config/usb_gadget/g1/functions/mtp.gs0 /config/usb_gadget/g1/configs/b.1/f1
        symlink /config/usb_gadget/g1/functions/ffs.adb /config/usb_gadget/g1/configs/b.1/f2
    elif [ "${sys.usb.config}" == "adb" ]; then
        write /config/usb_gadget/g1/configs/b.1/strings/0x409/configuration "adb"
        symlink /config/usb_gadget/g1/functions/ffs.adb /config/usb_gadget/g1/configs/b.1/f1
    elif [ "${sys.usb.config}" == "fastboot" ]; then
        write /config/usb_gadget/g1/configs/b.1/strings/0x409/configuration "fastboot"
        symlink /config/usb_gadget/g1/functions/fastboot /config/usb_gadget/g1/configs/b.1/f1
    elif [ "${sys.usb.config}" == "sideload" ]; then
        write /config/usb_gadget/g1/configs/b.1/strings/0x409/configuration "sideload"
        symlink /config/usb_gadget/g1/functions/sideload /config/usb_gadget/g1/configs/b.1/f1
    elif [ "${sys.usb.config}" == "sideload,adb" ]; then
        write /config/usb_gadget/g1/configs/b.1/strings/0x409/configuration "sideload_adb"
        symlink /config/usb_gadget/g1/functions/sideload /config/usb_gadget/g1/configs/b.1/f1
        symlink /config/usb_gadget/g1/functions/ffs.adb /config/usb_gadget/g1/configs/b.1/f2
    fi

    write /config/usb_gadget/g1/UDC "musb-hdrc"

on property:sys.usb.config=none
    write /config/usb_gadget/g1/UDC "none"
    stop adbd
    setprop sys.usb.ffs.ready 0
    write /config/usb_gadget/g1/bDeviceClass 0
    write /config/usb_gadget/g1/bDeviceSubClass 0
    write /config/usb_gadget/g1/bDeviceProtocol 0
    setprop sys.usb.state ${sys.usb.config}